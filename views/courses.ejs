<!DOCTYPE html>
<html>
    <head>
        <title><%= title %></title>

        <meta name="viewport" content="width=device-width, initial-scale=1">

        <link rel='stylesheet' href='/stylesheets/style.css' />
        <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/css/bootstrap.min.css">

        <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.6.3/jquery.min.js"></script>
        <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/js/bootstrap.min.js"></script>
    </head>
    <body>

        <!-- Navigation bar -->
        <nav class="navbar navbar-inverse navbar-static-top">
            <div class="container-fluid">
                <div class="navbar-header">
                    <a class="navbar-brand" href="../"><%= title %></a>
                </div>
                <ul class="nav navbar-nav">
                    <li><a href="../">Home</a></li>
                    <% if (user) { %>
                        <li><a href="../courses">Courses</a></li>
                        <li><a href="../create">Create</a></li>
                    <% } %>
                </ul>
                <ul class="nav navbar-nav navbar-right">
                    <% if (!user) { %>
                        <li><a href="../register"><span class="glyphicon glyphicon-user"></span> Register</a></li>
                        <li><a href="../login"><span class="glyphicon glyphicon-log-in"></span> Login</a></li>
                    <% } else { %>
                        <li><a href="../logout"><span class="glyphicon glyphicon-log-out"></span> Logout</a></li>
                    <% } %>
                </ul>
            </div>
        </nav>

        <!-- Email Modals -->
        <% for (let i = 0; i < courses.length; i++) { %>
            <% let modalId = "modal" + courses[i].code; %>
        <div class="modal fade" role="dialog" id=<%= modalId %>>
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal">&times;</button>
                        <h4 class="modal-title">Send code to emails</h4>
                    </div>
                    <div class="modal-body">
                        <form method="POST" class="form emailform" >
                            <% let mailId = "mail" + courses[i].code %>
                            <textarea  name="emails" class="form-control" rows="5" placeholder="email1@mail.com;email2@mail.com" style="resize: none" id=<%= mailId %>></textarea>
                            <input type="hidden" name="code" value=<%= courses[i].code %> />
                            <input type="submit" class="btn btn-primary" value="Send">
                        </form>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                    </div>
                </div>
            </div>
        </div>
        <% } %>

        <div class="container">
            <div class="row">
                <div class="col-md-12">
                    <h1><%= user.firstname %>'s courses</h1>
                    <table class="table table-striped" id="table-courses">
                        <tr>
                            <th style="text-align: center">Code</th>
                            <th onclick="sortTableCoursesAlphabet(1)" style="text-align: center">Title</th>
                            <th onclick="sortTableCoursesDate(2)" style="text-align: center">Start date</th>
                            <th onclick="sortTableCoursesDate(3)" style="text-align: center">End date</th>
                            <th onclick="sortTableCoursesNum(4)" style="text-align: center">No. of questions</th>
                            <th onclick="sortTableCoursesNum(5)" style="text-align: center">Answered</th>
                            <th></th>
                            <th></th>
                        </tr>
                        <% for (let i = 0; i < courses.length; i++) { %>
                            <tr>
                                <td style="text-align: center"><a href="../course/<%= courses[i].code %>"><%= courses[i].code %></a></td>
                                <td style="text-align: center"><%= courses[i].title %></td>
                                <td style="text-align: center"><%= courses[i].startdate.getDate() %>/<%= courses[i].startdate.getMonth()+1 %>/<%= courses[i].startdate.getFullYear() %></td>
                                <td style="text-align: center"><%= courses[i].enddate.getDate() %>/<%= courses[i].enddate.getMonth()+1 %>/<%= courses[i].enddate.getFullYear() %></td>
                                <td style="text-align: center"><%= courses[i].qcount %></td>
                                <td style="text-align: center"><%= courses[i].acount %></td>
                                <td style="text-align: center">
                                    <form action="share/<%= courses[i].code %>">
                                        <input type="submit" value="Share code" class="btn btn-default">
                                    </form>
                                </td>
                                <td style="text-align: center">
                                    <% let mailModalTarget = "#modal" + courses[i].code; %>
                                    <button type="button" class="btn btn-default" data-toggle="modal" data-target=<%= mailModalTarget %>>Mail</button>
                                </td>
                            </tr>
                        <% } %>
                    </table>
                </div>
            </div>
        </div>

        <script>
            function dateStrToObject(date) {
                date = date.split('/');

                let day = date[0];
                let month = date[1];
                let year = date[2];

                let dateStr = year + '-' + month + '-' + day;

                let dateObject = new Date(dateStr);

                return dateObject;
            }

            function sortTableCoursesDate(n) {
                let table, rows, switching, i, x, y, shouldSwitch, dir, switchcount = 0;
                table = document.getElementById("table-courses");
                switching = true;
                // Set the sorting direction to ascending:
                dir = "asc";
                /* Make a loop that will continue until
                no switching has been done: */
                while (switching) {
                    // Start by saying: no switching is done:
                    switching = false;
                    rows = table.rows;
                    /* Loop through all table rows (except the
                    first, which contains table headers): */
                    for (i = 1; i < (rows.length - 1); i++) {
                        // Start by saying there should be no switching:
                        shouldSwitch = false;
                        /* Get the two elements you want to compare,
                        one from current row and one from the next: */
                        x = rows[i].getElementsByTagName("TD")[n];
                        y = rows[i + 1].getElementsByTagName("TD")[n];
                        /* Check if the two rows should switch place,
                        based on the direction, asc or desc: */

                        let date1 = dateStrToObject(x.innerHTML);
                        let date2 = dateStrToObject(y.innerHTML);

                        if (dir == "asc") {
                            if (date1 > date2) {
                                // If so, mark as a switch and break the loop:
                                shouldSwitch = true;
                                break;
                            }
                        } else if (dir == "desc") {
                            if (date1 < date2) {
                                // If so, mark as a switch and break the loop:
                                shouldSwitch = true;
                                break;
                            }
                        }
                    }
                    if (shouldSwitch) {
                        /* If a switch has been marked, make the switch
                        and mark that a switch has been done: */
                        rows[i].parentNode.insertBefore(rows[i + 1], rows[i]);
                        switching = true;
                        // Each time a switch is done, increase this count by 1:
                        switchcount ++;
                    } else {
                        /* If no switching has been done AND the direction is "asc",
                        set the direction to "desc" and run the while loop again. */
                        if (switchcount == 0 && dir == "asc") {
                            dir = "desc";
                            switching = true;
                        }
                    }
                }
            }

            function sortTableCoursesNum(n) {
                let table, rows, switching, i, x, y, shouldSwitch, dir, switchcount = 0;
                table = document.getElementById("table-courses");
                switching = true;
                // Set the sorting direction to ascending:
                dir = "asc";
                /* Make a loop that will continue until
                no switching has been done: */
                while (switching) {
                    // Start by saying: no switching is done:
                    switching = false;
                    rows = table.rows;
                    /* Loop through all table rows (except the
                    first, which contains table headers): */
                    for (i = 1; i < (rows.length - 1); i++) {
                        // Start by saying there should be no switching:
                        shouldSwitch = false;
                        /* Get the two elements you want to compare,
                        one from current row and one from the next: */
                        x = rows[i].getElementsByTagName("TD")[n];
                        y = rows[i + 1].getElementsByTagName("TD")[n];
                        /* Check if the two rows should switch place,
                        based on the direction, asc or desc: */
                        if (dir == "asc") {
                            if (Number(x.innerHTML) > Number(y.innerHTML)) {
                                // If so, mark as a switch and break the loop:
                                shouldSwitch = true;
                                break;
                            }
                        } else if (dir == "desc") {
                            if (Number(x.innerHTML) < Number(y.innerHTML)) {
                                // If so, mark as a switch and break the loop:
                                shouldSwitch = true;
                                break;
                            }
                        }
                    }
                    if (shouldSwitch) {
                        /* If a switch has been marked, make the switch
                        and mark that a switch has been done: */
                        rows[i].parentNode.insertBefore(rows[i + 1], rows[i]);
                        switching = true;
                        // Each time a switch is done, increase this count by 1:
                        switchcount ++;
                    } else {
                        /* If no switching has been done AND the direction is "asc",
                        set the direction to "desc" and run the while loop again. */
                        if (switchcount == 0 && dir == "asc") {
                            dir = "desc";
                            switching = true;
                        }
                    }
                }
            }

            function sortTableCoursesAlphabet(n) {
                let table, rows, switching, i, x, y, shouldSwitch, dir, switchcount = 0;
                table = document.getElementById("table-courses");
                switching = true;
                // Set the sorting direction to ascending:
                dir = "asc";
                /* Make a loop that will continue until
                no switching has been done: */
                while (switching) {
                    // Start by saying: no switching is done:
                    switching = false;
                    rows = table.rows;
                    /* Loop through all table rows (except the
                    first, which contains table headers): */
                    for (i = 1; i < (rows.length - 1); i++) {
                        // Start by saying there should be no switching:
                        shouldSwitch = false;
                        /* Get the two elements you want to compare,
                        one from current row and one from the next: */
                        x = rows[i].getElementsByTagName("TD")[n];
                        y = rows[i + 1].getElementsByTagName("TD")[n];
                        /* Check if the two rows should switch place,
                        based on the direction, asc or desc: */
                        if (dir == "asc") {
                            if (x.innerHTML.toLowerCase() > y.innerHTML.toLowerCase()) {
                                // If so, mark as a switch and break the loop:
                                shouldSwitch = true;
                                break;
                            }
                        } else if (dir == "desc") {
                            if (x.innerHTML.toLowerCase() < y.innerHTML.toLowerCase()) {
                                // If so, mark as a switch and break the loop:
                                shouldSwitch = true;
                                break;
                            }
                        }
                    }
                    if (shouldSwitch) {
                        /* If a switch has been marked, make the switch
                        and mark that a switch has been done: */
                        rows[i].parentNode.insertBefore(rows[i + 1], rows[i]);
                        switching = true;
                        // Each time a switch is done, increase this count by 1:
                        switchcount ++;
                    } else {
                        /* If no switching has been done AND the direction is "asc",
                        set the direction to "desc" and run the while loop again. */
                        if (switchcount == 0 && dir == "asc") {
                            dir = "desc";
                            switching = true;
                        }
                    }
                }
            }
        </script>

    </body>
</html>
